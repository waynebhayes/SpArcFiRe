#!/bin/bash
# hawk = Hayes awk, by Wayne Hayes (whayes@uci.edu)

# Functions
die(){ (echo "$USAGE"; echo "FATAL ERROR: $@")>&2; exit 1; }
warn(){ (echo "WARNING: $@")>&2; }
not(){ if eval "$@"; then return 1; else return 0; fi; }
newlines(){ awk '{for(i=1; i<=NF;i++)print $i}' "$@"; }
parse(){ awk "BEGIN{print $@}" </dev/null; }

TestGawk(){ echo hello | gawk '{++array[$1][$1]}' || die "Upgrade to a [g]awk that supports multi-dimensional arrays"; }
TestGawk

# generally useful Variables
NL='
'
TAB='	'

# Temporary Filename + Directory (both, you can use either, note they'll have different random stuff in the XXXXXX part)
TMP=`mktemp /tmp/hawk.XXXXXX`
 trap "/bin/rm -rf $TMP; exit" 0 1 2 3 15 # call trap "" N to remove the trap for signal N

DIR="`dirname $0`"
FIELD_SEP=" " # space
PROFILE= # set to the single letter p for profiling
PROF_OUT=
while true; do
    case "$1" in
    -T) FIELD_SEP="$TAB";;
    -F) FIELD_SEP="$2"; shift;;
    -F?) FIELD_SEP=`echo "$1" | sed 's/^-F//'`;;
    -F*) die "-F can only be followed by one character, so '$1' is not valid";;
    -p*) PROFILE=p; PROF_OUT="$1";;
    -*) die "unknown option '$1'";;
    *) break;;
    esac
    shift
done

PROG="$1"
shift

echo "`cat "$DIR/misc.awk"`$PROG" > $TMP

AWK=`(which ${PROFILE}gawk4 || which ${PROFILE}gawk) 2>/dev/null | head -1 | sed 's/\*//g'`
if [ -x "$AWK" ] && $AWK --version 2>/dev/null | grep 'GNU Awk [45]\.' >/dev/null; then
    :
else
    AWK=${PROFILE}awk
fi
#echo '$AWK='"$AWK $PROF_OUT" >&2

if $AWK $PROF_OUT -F "$FIELD_SEP" -f "$TMP" "$@"; then : # do nothing, just exit
else
    STATUS=$?
    [ $STATUS -le 3 ] && exit $STATUS
    # egrep-like regular expression of exit status/signal names to ignore
    IGNORE="PIPE"
    # Automatically convert the names above to integers
    if kill -l | fgrep -q "$TAB"; then # kill -l has the format "13) SIGPIPE", each separated by tabs
	kill -l | tr "$TAB" "$NL"
    else # kill -l has the format of space-separated "HUP INT QUIT", etc...
	kill -l | newlines | grep -v IOT | nl   # but note IOT is a duplicate of TRAP--both are signal 6
    fi | head -20 | egrep -i "$IGNORE" | awk '128+$1=='"$STATUS{good=1}END{exit !good}" && exit 0
    echo "'$AWK $PROF_OUT' failed with status $STATUS program file is in file $TMP" >&2
    trap "" 0 1 2 3 15 # do not remove file
    exit $STATUS
fi
